#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JinTeamForAdmin
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="JinDB")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 확장성 메서드 정의
    partial void OnCreated();
    partial void Insertcategory_List(category_List instance);
    partial void Updatecategory_List(category_List instance);
    partial void Deletecategory_List(category_List instance);
    partial void Insertcustomers(customers instance);
    partial void Updatecustomers(customers instance);
    partial void Deletecustomers(customers instance);
    partial void Insertorder_List(order_List instance);
    partial void Updateorder_List(order_List instance);
    partial void Deleteorder_List(order_List instance);
    partial void Insertpayment_info(payment_info instance);
    partial void Updatepayment_info(payment_info instance);
    partial void Deletepayment_info(payment_info instance);
    partial void Insertproducts(products instance);
    partial void Updateproducts(products instance);
    partial void Deleteproducts(products instance);
    partial void Insertreview(review instance);
    partial void Updatereview(review instance);
    partial void Deletereview(review instance);
    partial void Insertseller(seller instance);
    partial void Updateseller(seller instance);
    partial void Deleteseller(seller instance);
    partial void Insertstock_List(stock_List instance);
    partial void Updatestock_List(stock_List instance);
    partial void Deletestock_List(stock_List instance);
    partial void Inserttransport_info(transport_info instance);
    partial void Updatetransport_info(transport_info instance);
    partial void Deletetransport_info(transport_info instance);
    partial void Insertuser_ship_info(user_ship_info instance);
    partial void Updateuser_ship_info(user_ship_info instance);
    partial void Deleteuser_ship_info(user_ship_info instance);
    partial void Insertwish_List(wish_List instance);
    partial void Updatewish_List(wish_List instance);
    partial void Deletewish_List(wish_List instance);
    partial void InsertInquire_Seller(Inquire_Seller instance);
    partial void UpdateInquire_Seller(Inquire_Seller instance);
    partial void DeleteInquire_Seller(Inquire_Seller instance);
    partial void InsertInquire_Admin(Inquire_Admin instance);
    partial void UpdateInquire_Admin(Inquire_Admin instance);
    partial void DeleteInquire_Admin(Inquire_Admin instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::JinTeamForAdmin.Properties.Settings.Default.JinDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<category_List> category_List
		{
			get
			{
				return this.GetTable<category_List>();
			}
		}
		
		public System.Data.Linq.Table<customers> customers
		{
			get
			{
				return this.GetTable<customers>();
			}
		}
		
		public System.Data.Linq.Table<order_List> order_List
		{
			get
			{
				return this.GetTable<order_List>();
			}
		}
		
		public System.Data.Linq.Table<payment_info> payment_info
		{
			get
			{
				return this.GetTable<payment_info>();
			}
		}
		
		public System.Data.Linq.Table<products> products
		{
			get
			{
				return this.GetTable<products>();
			}
		}
		
		public System.Data.Linq.Table<review> review
		{
			get
			{
				return this.GetTable<review>();
			}
		}
		
		public System.Data.Linq.Table<seller> seller
		{
			get
			{
				return this.GetTable<seller>();
			}
		}
		
		public System.Data.Linq.Table<stock_List> stock_List
		{
			get
			{
				return this.GetTable<stock_List>();
			}
		}
		
		public System.Data.Linq.Table<transport_info> transport_info
		{
			get
			{
				return this.GetTable<transport_info>();
			}
		}
		
		public System.Data.Linq.Table<user_ship_info> user_ship_info
		{
			get
			{
				return this.GetTable<user_ship_info>();
			}
		}
		
		public System.Data.Linq.Table<wish_List> wish_List
		{
			get
			{
				return this.GetTable<wish_List>();
			}
		}
		
		public System.Data.Linq.Table<Inquire_Seller> Inquire_Seller
		{
			get
			{
				return this.GetTable<Inquire_Seller>();
			}
		}
		
		public System.Data.Linq.Table<Inquire_Admin> Inquire_Admin
		{
			get
			{
				return this.GetTable<Inquire_Admin>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.category_List")]
	public partial class category_List : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _cat_ID;
		
		private string _cat_kind;
		
		private EntitySet<products> _products;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncat_IDChanging(string value);
    partial void Oncat_IDChanged();
    partial void Oncat_kindChanging(string value);
    partial void Oncat_kindChanged();
    #endregion
		
		public category_List()
		{
			this._products = new EntitySet<products>(new Action<products>(this.attach_products), new Action<products>(this.detach_products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_ID", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string cat_ID
		{
			get
			{
				return this._cat_ID;
			}
			set
			{
				if ((this._cat_ID != value))
				{
					this.Oncat_IDChanging(value);
					this.SendPropertyChanging();
					this._cat_ID = value;
					this.SendPropertyChanged("cat_ID");
					this.Oncat_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_kind", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string cat_kind
		{
			get
			{
				return this._cat_kind;
			}
			set
			{
				if ((this._cat_kind != value))
				{
					this.Oncat_kindChanging(value);
					this.SendPropertyChanging();
					this._cat_kind = value;
					this.SendPropertyChanged("cat_kind");
					this.Oncat_kindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_List_products", Storage="_products", ThisKey="cat_ID", OtherKey="cat_ID")]
		public EntitySet<products> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_products(products entity)
		{
			this.SendPropertyChanging();
			entity.category_List = this;
		}
		
		private void detach_products(products entity)
		{
			this.SendPropertyChanging();
			entity.category_List = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customers")]
	public partial class customers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cus_no;
		
		private string _cus_ID;
		
		private System.Data.Linq.Binary _cus_pwd;
		
		private string _cus_phone;
		
		private string _cus_addr;
		
		private string _cus_name;
		
		private string _cus_Nickname;
		
		private bool _cus_gender;
		
		private int _cus_age;
		
		private bool _cus_state;
		
		private System.Nullable<int> _cus_count;
		
		private System.Nullable<System.DateTime> _withdrawal_date;
		
		private System.DateTime _join_date;
		
		private string _cus_guid;
		
		private EntitySet<order_List> _order_List;
		
		private EntitySet<review> _review;
		
		private EntitySet<user_ship_info> _user_ship_info;
		
		private EntitySet<wish_List> _wish_List;
		
		private EntitySet<Inquire_Seller> _Inquire_Seller;
		
		private EntitySet<Inquire_Admin> _Inquire_Admin;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncus_noChanging(int value);
    partial void Oncus_noChanged();
    partial void Oncus_IDChanging(string value);
    partial void Oncus_IDChanged();
    partial void Oncus_pwdChanging(System.Data.Linq.Binary value);
    partial void Oncus_pwdChanged();
    partial void Oncus_phoneChanging(string value);
    partial void Oncus_phoneChanged();
    partial void Oncus_addrChanging(string value);
    partial void Oncus_addrChanged();
    partial void Oncus_nameChanging(string value);
    partial void Oncus_nameChanged();
    partial void Oncus_NicknameChanging(string value);
    partial void Oncus_NicknameChanged();
    partial void Oncus_genderChanging(bool value);
    partial void Oncus_genderChanged();
    partial void Oncus_ageChanging(int value);
    partial void Oncus_ageChanged();
    partial void Oncus_stateChanging(bool value);
    partial void Oncus_stateChanged();
    partial void Oncus_countChanging(System.Nullable<int> value);
    partial void Oncus_countChanged();
    partial void Onwithdrawal_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onwithdrawal_dateChanged();
    partial void Onjoin_dateChanging(System.DateTime value);
    partial void Onjoin_dateChanged();
    partial void Oncus_guidChanging(string value);
    partial void Oncus_guidChanged();
    #endregion
		
		public customers()
		{
			this._order_List = new EntitySet<order_List>(new Action<order_List>(this.attach_order_List), new Action<order_List>(this.detach_order_List));
			this._review = new EntitySet<review>(new Action<review>(this.attach_review), new Action<review>(this.detach_review));
			this._user_ship_info = new EntitySet<user_ship_info>(new Action<user_ship_info>(this.attach_user_ship_info), new Action<user_ship_info>(this.detach_user_ship_info));
			this._wish_List = new EntitySet<wish_List>(new Action<wish_List>(this.attach_wish_List), new Action<wish_List>(this.detach_wish_List));
			this._Inquire_Seller = new EntitySet<Inquire_Seller>(new Action<Inquire_Seller>(this.attach_Inquire_Seller), new Action<Inquire_Seller>(this.detach_Inquire_Seller));
			this._Inquire_Admin = new EntitySet<Inquire_Admin>(new Action<Inquire_Admin>(this.attach_Inquire_Admin), new Action<Inquire_Admin>(this.detach_Inquire_Admin));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cus_no", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cus_no
		{
			get
			{
				return this._cus_no;
			}
			set
			{
				if ((this._cus_no != value))
				{
					this.Oncus_noChanging(value);
					this.SendPropertyChanging();
					this._cus_no = value;
					this.SendPropertyChanged("cus_no");
					this.Oncus_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cus_ID", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string cus_ID
		{
			get
			{
				return this._cus_ID;
			}
			set
			{
				if ((this._cus_ID != value))
				{
					this.Oncus_IDChanging(value);
					this.SendPropertyChanging();
					this._cus_ID = value;
					this.SendPropertyChanged("cus_ID");
					this.Oncus_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cus_pwd", DbType="VarBinary(128) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary cus_pwd
		{
			get
			{
				return this._cus_pwd;
			}
			set
			{
				if ((this._cus_pwd != value))
				{
					this.Oncus_pwdChanging(value);
					this.SendPropertyChanging();
					this._cus_pwd = value;
					this.SendPropertyChanged("cus_pwd");
					this.Oncus_pwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cus_phone", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string cus_phone
		{
			get
			{
				return this._cus_phone;
			}
			set
			{
				if ((this._cus_phone != value))
				{
					this.Oncus_phoneChanging(value);
					this.SendPropertyChanging();
					this._cus_phone = value;
					this.SendPropertyChanged("cus_phone");
					this.Oncus_phoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cus_addr", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string cus_addr
		{
			get
			{
				return this._cus_addr;
			}
			set
			{
				if ((this._cus_addr != value))
				{
					this.Oncus_addrChanging(value);
					this.SendPropertyChanging();
					this._cus_addr = value;
					this.SendPropertyChanged("cus_addr");
					this.Oncus_addrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cus_name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string cus_name
		{
			get
			{
				return this._cus_name;
			}
			set
			{
				if ((this._cus_name != value))
				{
					this.Oncus_nameChanging(value);
					this.SendPropertyChanging();
					this._cus_name = value;
					this.SendPropertyChanged("cus_name");
					this.Oncus_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cus_Nickname", DbType="NVarChar(40)")]
		public string cus_Nickname
		{
			get
			{
				return this._cus_Nickname;
			}
			set
			{
				if ((this._cus_Nickname != value))
				{
					this.Oncus_NicknameChanging(value);
					this.SendPropertyChanging();
					this._cus_Nickname = value;
					this.SendPropertyChanged("cus_Nickname");
					this.Oncus_NicknameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cus_gender", DbType="Bit NOT NULL")]
		public bool cus_gender
		{
			get
			{
				return this._cus_gender;
			}
			set
			{
				if ((this._cus_gender != value))
				{
					this.Oncus_genderChanging(value);
					this.SendPropertyChanging();
					this._cus_gender = value;
					this.SendPropertyChanged("cus_gender");
					this.Oncus_genderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cus_age", DbType="Int NOT NULL")]
		public int cus_age
		{
			get
			{
				return this._cus_age;
			}
			set
			{
				if ((this._cus_age != value))
				{
					this.Oncus_ageChanging(value);
					this.SendPropertyChanging();
					this._cus_age = value;
					this.SendPropertyChanged("cus_age");
					this.Oncus_ageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cus_state", DbType="Bit NOT NULL")]
		public bool cus_state
		{
			get
			{
				return this._cus_state;
			}
			set
			{
				if ((this._cus_state != value))
				{
					this.Oncus_stateChanging(value);
					this.SendPropertyChanging();
					this._cus_state = value;
					this.SendPropertyChanged("cus_state");
					this.Oncus_stateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cus_count", DbType="Int")]
		public System.Nullable<int> cus_count
		{
			get
			{
				return this._cus_count;
			}
			set
			{
				if ((this._cus_count != value))
				{
					this.Oncus_countChanging(value);
					this.SendPropertyChanging();
					this._cus_count = value;
					this.SendPropertyChanged("cus_count");
					this.Oncus_countChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_withdrawal_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> withdrawal_date
		{
			get
			{
				return this._withdrawal_date;
			}
			set
			{
				if ((this._withdrawal_date != value))
				{
					this.Onwithdrawal_dateChanging(value);
					this.SendPropertyChanging();
					this._withdrawal_date = value;
					this.SendPropertyChanged("withdrawal_date");
					this.Onwithdrawal_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_join_date", DbType="DateTime NOT NULL")]
		public System.DateTime join_date
		{
			get
			{
				return this._join_date;
			}
			set
			{
				if ((this._join_date != value))
				{
					this.Onjoin_dateChanging(value);
					this.SendPropertyChanging();
					this._join_date = value;
					this.SendPropertyChanged("join_date");
					this.Onjoin_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cus_guid", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string cus_guid
		{
			get
			{
				return this._cus_guid;
			}
			set
			{
				if ((this._cus_guid != value))
				{
					this.Oncus_guidChanging(value);
					this.SendPropertyChanging();
					this._cus_guid = value;
					this.SendPropertyChanged("cus_guid");
					this.Oncus_guidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customers_order_List", Storage="_order_List", ThisKey="cus_no", OtherKey="cus_no")]
		public EntitySet<order_List> order_List
		{
			get
			{
				return this._order_List;
			}
			set
			{
				this._order_List.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customers_review", Storage="_review", ThisKey="cus_no", OtherKey="cus_no")]
		public EntitySet<review> review
		{
			get
			{
				return this._review;
			}
			set
			{
				this._review.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customers_user_ship_info", Storage="_user_ship_info", ThisKey="cus_no", OtherKey="cus_no")]
		public EntitySet<user_ship_info> user_ship_info
		{
			get
			{
				return this._user_ship_info;
			}
			set
			{
				this._user_ship_info.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customers_wish_List", Storage="_wish_List", ThisKey="cus_no", OtherKey="cus_no")]
		public EntitySet<wish_List> wish_List
		{
			get
			{
				return this._wish_List;
			}
			set
			{
				this._wish_List.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customers_Inquire_Seller", Storage="_Inquire_Seller", ThisKey="cus_no", OtherKey="cus_no")]
		public EntitySet<Inquire_Seller> Inquire_Seller
		{
			get
			{
				return this._Inquire_Seller;
			}
			set
			{
				this._Inquire_Seller.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customers_Inquire_Admin", Storage="_Inquire_Admin", ThisKey="cus_no", OtherKey="cus_no")]
		public EntitySet<Inquire_Admin> Inquire_Admin
		{
			get
			{
				return this._Inquire_Admin;
			}
			set
			{
				this._Inquire_Admin.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_order_List(order_List entity)
		{
			this.SendPropertyChanging();
			entity.customers = this;
		}
		
		private void detach_order_List(order_List entity)
		{
			this.SendPropertyChanging();
			entity.customers = null;
		}
		
		private void attach_review(review entity)
		{
			this.SendPropertyChanging();
			entity.customers = this;
		}
		
		private void detach_review(review entity)
		{
			this.SendPropertyChanging();
			entity.customers = null;
		}
		
		private void attach_user_ship_info(user_ship_info entity)
		{
			this.SendPropertyChanging();
			entity.customers = this;
		}
		
		private void detach_user_ship_info(user_ship_info entity)
		{
			this.SendPropertyChanging();
			entity.customers = null;
		}
		
		private void attach_wish_List(wish_List entity)
		{
			this.SendPropertyChanging();
			entity.customers = this;
		}
		
		private void detach_wish_List(wish_List entity)
		{
			this.SendPropertyChanging();
			entity.customers = null;
		}
		
		private void attach_Inquire_Seller(Inquire_Seller entity)
		{
			this.SendPropertyChanging();
			entity.customers = this;
		}
		
		private void detach_Inquire_Seller(Inquire_Seller entity)
		{
			this.SendPropertyChanging();
			entity.customers = null;
		}
		
		private void attach_Inquire_Admin(Inquire_Admin entity)
		{
			this.SendPropertyChanging();
			entity.customers = this;
		}
		
		private void detach_Inquire_Admin(Inquire_Admin entity)
		{
			this.SendPropertyChanging();
			entity.customers = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.order_List")]
	public partial class order_List : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _order_ID;
		
		private int _cus_no;
		
		private string _stock_ID;
		
		private int _order_count;
		
		private int _order_price;
		
		private string _order_require;
		
		private EntitySet<payment_info> _payment_info;
		
		private EntityRef<customers> _customers;
		
		private EntityRef<stock_List> _stock_List;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onorder_IDChanging(string value);
    partial void Onorder_IDChanged();
    partial void Oncus_noChanging(int value);
    partial void Oncus_noChanged();
    partial void Onstock_IDChanging(string value);
    partial void Onstock_IDChanged();
    partial void Onorder_countChanging(int value);
    partial void Onorder_countChanged();
    partial void Onorder_priceChanging(int value);
    partial void Onorder_priceChanged();
    partial void Onorder_requireChanging(string value);
    partial void Onorder_requireChanged();
    #endregion
		
		public order_List()
		{
			this._payment_info = new EntitySet<payment_info>(new Action<payment_info>(this.attach_payment_info), new Action<payment_info>(this.detach_payment_info));
			this._customers = default(EntityRef<customers>);
			this._stock_List = default(EntityRef<stock_List>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_ID", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string order_ID
		{
			get
			{
				return this._order_ID;
			}
			set
			{
				if ((this._order_ID != value))
				{
					this.Onorder_IDChanging(value);
					this.SendPropertyChanging();
					this._order_ID = value;
					this.SendPropertyChanged("order_ID");
					this.Onorder_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cus_no", DbType="Int NOT NULL")]
		public int cus_no
		{
			get
			{
				return this._cus_no;
			}
			set
			{
				if ((this._cus_no != value))
				{
					if (this._customers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncus_noChanging(value);
					this.SendPropertyChanging();
					this._cus_no = value;
					this.SendPropertyChanged("cus_no");
					this.Oncus_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stock_ID", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string stock_ID
		{
			get
			{
				return this._stock_ID;
			}
			set
			{
				if ((this._stock_ID != value))
				{
					if (this._stock_List.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstock_IDChanging(value);
					this.SendPropertyChanging();
					this._stock_ID = value;
					this.SendPropertyChanged("stock_ID");
					this.Onstock_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_count", DbType="Int NOT NULL")]
		public int order_count
		{
			get
			{
				return this._order_count;
			}
			set
			{
				if ((this._order_count != value))
				{
					this.Onorder_countChanging(value);
					this.SendPropertyChanging();
					this._order_count = value;
					this.SendPropertyChanged("order_count");
					this.Onorder_countChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_price", DbType="Int NOT NULL")]
		public int order_price
		{
			get
			{
				return this._order_price;
			}
			set
			{
				if ((this._order_price != value))
				{
					this.Onorder_priceChanging(value);
					this.SendPropertyChanging();
					this._order_price = value;
					this.SendPropertyChanged("order_price");
					this.Onorder_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_require", DbType="NVarChar(MAX)")]
		public string order_require
		{
			get
			{
				return this._order_require;
			}
			set
			{
				if ((this._order_require != value))
				{
					this.Onorder_requireChanging(value);
					this.SendPropertyChanging();
					this._order_require = value;
					this.SendPropertyChanged("order_require");
					this.Onorder_requireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_List_payment_info", Storage="_payment_info", ThisKey="order_ID", OtherKey="order_ID")]
		public EntitySet<payment_info> payment_info
		{
			get
			{
				return this._payment_info;
			}
			set
			{
				this._payment_info.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customers_order_List", Storage="_customers", ThisKey="cus_no", OtherKey="cus_no", IsForeignKey=true)]
		public customers customers
		{
			get
			{
				return this._customers.Entity;
			}
			set
			{
				customers previousValue = this._customers.Entity;
				if (((previousValue != value) 
							|| (this._customers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customers.Entity = null;
						previousValue.order_List.Remove(this);
					}
					this._customers.Entity = value;
					if ((value != null))
					{
						value.order_List.Add(this);
						this._cus_no = value.cus_no;
					}
					else
					{
						this._cus_no = default(int);
					}
					this.SendPropertyChanged("customers");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="stock_List_order_List", Storage="_stock_List", ThisKey="stock_ID", OtherKey="stock_ID", IsForeignKey=true)]
		public stock_List stock_List
		{
			get
			{
				return this._stock_List.Entity;
			}
			set
			{
				stock_List previousValue = this._stock_List.Entity;
				if (((previousValue != value) 
							|| (this._stock_List.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._stock_List.Entity = null;
						previousValue.order_List.Remove(this);
					}
					this._stock_List.Entity = value;
					if ((value != null))
					{
						value.order_List.Add(this);
						this._stock_ID = value.stock_ID;
					}
					else
					{
						this._stock_ID = default(string);
					}
					this.SendPropertyChanged("stock_List");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_payment_info(payment_info entity)
		{
			this.SendPropertyChanging();
			entity.order_List = this;
		}
		
		private void detach_payment_info(payment_info entity)
		{
			this.SendPropertyChanging();
			entity.order_List = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.payment_info")]
	public partial class payment_info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pay_ID;
		
		private string _order_ID;
		
		private int _user_ship_ID;
		
		private int _seller_no;
		
		private int _pay_count;
		
		private int _pay_price;
		
		private string _waybill_ID;
		
		private System.DateTime _pay_date;
		
		private System.Nullable<System.DateTime> _output_date_tax;
		
		private System.Nullable<System.DateTime> _output_date_order;
		
		private EntityRef<order_List> _order_List;
		
		private EntityRef<seller> _seller;
		
		private EntityRef<transport_info> _transport_info;
		
		private EntityRef<user_ship_info> _user_ship_info;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpay_IDChanging(int value);
    partial void Onpay_IDChanged();
    partial void Onorder_IDChanging(string value);
    partial void Onorder_IDChanged();
    partial void Onuser_ship_IDChanging(int value);
    partial void Onuser_ship_IDChanged();
    partial void Onseller_noChanging(int value);
    partial void Onseller_noChanged();
    partial void Onpay_countChanging(int value);
    partial void Onpay_countChanged();
    partial void Onpay_priceChanging(int value);
    partial void Onpay_priceChanged();
    partial void Onwaybill_IDChanging(string value);
    partial void Onwaybill_IDChanged();
    partial void Onpay_dateChanging(System.DateTime value);
    partial void Onpay_dateChanged();
    partial void Onoutput_date_taxChanging(System.Nullable<System.DateTime> value);
    partial void Onoutput_date_taxChanged();
    partial void Onoutput_date_orderChanging(System.Nullable<System.DateTime> value);
    partial void Onoutput_date_orderChanged();
    #endregion
		
		public payment_info()
		{
			this._order_List = default(EntityRef<order_List>);
			this._seller = default(EntityRef<seller>);
			this._transport_info = default(EntityRef<transport_info>);
			this._user_ship_info = default(EntityRef<user_ship_info>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pay_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pay_ID
		{
			get
			{
				return this._pay_ID;
			}
			set
			{
				if ((this._pay_ID != value))
				{
					this.Onpay_IDChanging(value);
					this.SendPropertyChanging();
					this._pay_ID = value;
					this.SendPropertyChanged("pay_ID");
					this.Onpay_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_ID", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string order_ID
		{
			get
			{
				return this._order_ID;
			}
			set
			{
				if ((this._order_ID != value))
				{
					if (this._order_List.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onorder_IDChanging(value);
					this.SendPropertyChanging();
					this._order_ID = value;
					this.SendPropertyChanged("order_ID");
					this.Onorder_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_ship_ID", DbType="Int NOT NULL")]
		public int user_ship_ID
		{
			get
			{
				return this._user_ship_ID;
			}
			set
			{
				if ((this._user_ship_ID != value))
				{
					if (this._user_ship_info.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_ship_IDChanging(value);
					this.SendPropertyChanging();
					this._user_ship_ID = value;
					this.SendPropertyChanged("user_ship_ID");
					this.Onuser_ship_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seller_no", DbType="Int NOT NULL")]
		public int seller_no
		{
			get
			{
				return this._seller_no;
			}
			set
			{
				if ((this._seller_no != value))
				{
					if (this._seller.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onseller_noChanging(value);
					this.SendPropertyChanging();
					this._seller_no = value;
					this.SendPropertyChanged("seller_no");
					this.Onseller_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pay_count", DbType="Int NOT NULL")]
		public int pay_count
		{
			get
			{
				return this._pay_count;
			}
			set
			{
				if ((this._pay_count != value))
				{
					this.Onpay_countChanging(value);
					this.SendPropertyChanging();
					this._pay_count = value;
					this.SendPropertyChanged("pay_count");
					this.Onpay_countChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pay_price", DbType="Int NOT NULL")]
		public int pay_price
		{
			get
			{
				return this._pay_price;
			}
			set
			{
				if ((this._pay_price != value))
				{
					this.Onpay_priceChanging(value);
					this.SendPropertyChanging();
					this._pay_price = value;
					this.SendPropertyChanged("pay_price");
					this.Onpay_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_waybill_ID", DbType="VarChar(13)")]
		public string waybill_ID
		{
			get
			{
				return this._waybill_ID;
			}
			set
			{
				if ((this._waybill_ID != value))
				{
					if (this._transport_info.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onwaybill_IDChanging(value);
					this.SendPropertyChanging();
					this._waybill_ID = value;
					this.SendPropertyChanged("waybill_ID");
					this.Onwaybill_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pay_date", DbType="DateTime NOT NULL")]
		public System.DateTime pay_date
		{
			get
			{
				return this._pay_date;
			}
			set
			{
				if ((this._pay_date != value))
				{
					this.Onpay_dateChanging(value);
					this.SendPropertyChanging();
					this._pay_date = value;
					this.SendPropertyChanged("pay_date");
					this.Onpay_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_output_date_tax", DbType="DateTime")]
		public System.Nullable<System.DateTime> output_date_tax
		{
			get
			{
				return this._output_date_tax;
			}
			set
			{
				if ((this._output_date_tax != value))
				{
					this.Onoutput_date_taxChanging(value);
					this.SendPropertyChanging();
					this._output_date_tax = value;
					this.SendPropertyChanged("output_date_tax");
					this.Onoutput_date_taxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_output_date_order", DbType="DateTime")]
		public System.Nullable<System.DateTime> output_date_order
		{
			get
			{
				return this._output_date_order;
			}
			set
			{
				if ((this._output_date_order != value))
				{
					this.Onoutput_date_orderChanging(value);
					this.SendPropertyChanging();
					this._output_date_order = value;
					this.SendPropertyChanged("output_date_order");
					this.Onoutput_date_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_List_payment_info", Storage="_order_List", ThisKey="order_ID", OtherKey="order_ID", IsForeignKey=true)]
		public order_List order_List
		{
			get
			{
				return this._order_List.Entity;
			}
			set
			{
				order_List previousValue = this._order_List.Entity;
				if (((previousValue != value) 
							|| (this._order_List.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._order_List.Entity = null;
						previousValue.payment_info.Remove(this);
					}
					this._order_List.Entity = value;
					if ((value != null))
					{
						value.payment_info.Add(this);
						this._order_ID = value.order_ID;
					}
					else
					{
						this._order_ID = default(string);
					}
					this.SendPropertyChanged("order_List");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seller_payment_info", Storage="_seller", ThisKey="seller_no", OtherKey="seller_no", IsForeignKey=true)]
		public seller seller
		{
			get
			{
				return this._seller.Entity;
			}
			set
			{
				seller previousValue = this._seller.Entity;
				if (((previousValue != value) 
							|| (this._seller.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._seller.Entity = null;
						previousValue.payment_info.Remove(this);
					}
					this._seller.Entity = value;
					if ((value != null))
					{
						value.payment_info.Add(this);
						this._seller_no = value.seller_no;
					}
					else
					{
						this._seller_no = default(int);
					}
					this.SendPropertyChanged("seller");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="transport_info_payment_info", Storage="_transport_info", ThisKey="waybill_ID", OtherKey="waybill_ID", IsForeignKey=true)]
		public transport_info transport_info
		{
			get
			{
				return this._transport_info.Entity;
			}
			set
			{
				transport_info previousValue = this._transport_info.Entity;
				if (((previousValue != value) 
							|| (this._transport_info.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._transport_info.Entity = null;
						previousValue.payment_info.Remove(this);
					}
					this._transport_info.Entity = value;
					if ((value != null))
					{
						value.payment_info.Add(this);
						this._waybill_ID = value.waybill_ID;
					}
					else
					{
						this._waybill_ID = default(string);
					}
					this.SendPropertyChanged("transport_info");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_ship_info_payment_info", Storage="_user_ship_info", ThisKey="user_ship_ID", OtherKey="user_ship_Id", IsForeignKey=true)]
		public user_ship_info user_ship_info
		{
			get
			{
				return this._user_ship_info.Entity;
			}
			set
			{
				user_ship_info previousValue = this._user_ship_info.Entity;
				if (((previousValue != value) 
							|| (this._user_ship_info.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user_ship_info.Entity = null;
						previousValue.payment_info.Remove(this);
					}
					this._user_ship_info.Entity = value;
					if ((value != null))
					{
						value.payment_info.Add(this);
						this._user_ship_ID = value.user_ship_Id;
					}
					else
					{
						this._user_ship_ID = default(int);
					}
					this.SendPropertyChanged("user_ship_info");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.products")]
	public partial class products : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _pro_ID;
		
		private string _cat_ID;
		
		private int _seller_no;
		
		private string _pro_name;
		
		private int _pro_price;
		
		private string _main_comment;
		
		private string _sub_comment;
		
		private string _main_image;
		
		private int _pro_hits;
		
		private int _pro_like;
		
		private int _pro_discount;
		
		private string _pro_gender;
		
		private bool _pro_state;
		
		private string _pro_url;
		
		private EntitySet<stock_List> _stock_List;
		
		private EntityRef<category_List> _category_List;
		
		private EntityRef<seller> _seller;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpro_IDChanging(string value);
    partial void Onpro_IDChanged();
    partial void Oncat_IDChanging(string value);
    partial void Oncat_IDChanged();
    partial void Onseller_noChanging(int value);
    partial void Onseller_noChanged();
    partial void Onpro_nameChanging(string value);
    partial void Onpro_nameChanged();
    partial void Onpro_priceChanging(int value);
    partial void Onpro_priceChanged();
    partial void Onmain_commentChanging(string value);
    partial void Onmain_commentChanged();
    partial void Onsub_commentChanging(string value);
    partial void Onsub_commentChanged();
    partial void Onmain_imageChanging(string value);
    partial void Onmain_imageChanged();
    partial void Onpro_hitsChanging(int value);
    partial void Onpro_hitsChanged();
    partial void Onpro_likeChanging(int value);
    partial void Onpro_likeChanged();
    partial void Onpro_discountChanging(int value);
    partial void Onpro_discountChanged();
    partial void Onpro_genderChanging(string value);
    partial void Onpro_genderChanged();
    partial void Onpro_stateChanging(bool value);
    partial void Onpro_stateChanged();
    partial void Onpro_urlChanging(string value);
    partial void Onpro_urlChanged();
    #endregion
		
		public products()
		{
			this._stock_List = new EntitySet<stock_List>(new Action<stock_List>(this.attach_stock_List), new Action<stock_List>(this.detach_stock_List));
			this._category_List = default(EntityRef<category_List>);
			this._seller = default(EntityRef<seller>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pro_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string pro_ID
		{
			get
			{
				return this._pro_ID;
			}
			set
			{
				if ((this._pro_ID != value))
				{
					this.Onpro_IDChanging(value);
					this.SendPropertyChanging();
					this._pro_ID = value;
					this.SendPropertyChanged("pro_ID");
					this.Onpro_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_ID", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string cat_ID
		{
			get
			{
				return this._cat_ID;
			}
			set
			{
				if ((this._cat_ID != value))
				{
					if (this._category_List.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncat_IDChanging(value);
					this.SendPropertyChanging();
					this._cat_ID = value;
					this.SendPropertyChanged("cat_ID");
					this.Oncat_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seller_no", DbType="Int NOT NULL")]
		public int seller_no
		{
			get
			{
				return this._seller_no;
			}
			set
			{
				if ((this._seller_no != value))
				{
					if (this._seller.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onseller_noChanging(value);
					this.SendPropertyChanging();
					this._seller_no = value;
					this.SendPropertyChanged("seller_no");
					this.Onseller_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pro_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string pro_name
		{
			get
			{
				return this._pro_name;
			}
			set
			{
				if ((this._pro_name != value))
				{
					this.Onpro_nameChanging(value);
					this.SendPropertyChanging();
					this._pro_name = value;
					this.SendPropertyChanged("pro_name");
					this.Onpro_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pro_price", DbType="Int NOT NULL")]
		public int pro_price
		{
			get
			{
				return this._pro_price;
			}
			set
			{
				if ((this._pro_price != value))
				{
					this.Onpro_priceChanging(value);
					this.SendPropertyChanging();
					this._pro_price = value;
					this.SendPropertyChanged("pro_price");
					this.Onpro_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_main_comment", DbType="NVarChar(MAX)")]
		public string main_comment
		{
			get
			{
				return this._main_comment;
			}
			set
			{
				if ((this._main_comment != value))
				{
					this.Onmain_commentChanging(value);
					this.SendPropertyChanging();
					this._main_comment = value;
					this.SendPropertyChanged("main_comment");
					this.Onmain_commentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sub_comment", DbType="NVarChar(MAX)")]
		public string sub_comment
		{
			get
			{
				return this._sub_comment;
			}
			set
			{
				if ((this._sub_comment != value))
				{
					this.Onsub_commentChanging(value);
					this.SendPropertyChanging();
					this._sub_comment = value;
					this.SendPropertyChanged("sub_comment");
					this.Onsub_commentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_main_image", DbType="VarChar(MAX)")]
		public string main_image
		{
			get
			{
				return this._main_image;
			}
			set
			{
				if ((this._main_image != value))
				{
					this.Onmain_imageChanging(value);
					this.SendPropertyChanging();
					this._main_image = value;
					this.SendPropertyChanged("main_image");
					this.Onmain_imageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pro_hits", DbType="Int NOT NULL")]
		public int pro_hits
		{
			get
			{
				return this._pro_hits;
			}
			set
			{
				if ((this._pro_hits != value))
				{
					this.Onpro_hitsChanging(value);
					this.SendPropertyChanging();
					this._pro_hits = value;
					this.SendPropertyChanged("pro_hits");
					this.Onpro_hitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pro_like", DbType="Int NOT NULL")]
		public int pro_like
		{
			get
			{
				return this._pro_like;
			}
			set
			{
				if ((this._pro_like != value))
				{
					this.Onpro_likeChanging(value);
					this.SendPropertyChanging();
					this._pro_like = value;
					this.SendPropertyChanged("pro_like");
					this.Onpro_likeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pro_discount", DbType="Int NOT NULL")]
		public int pro_discount
		{
			get
			{
				return this._pro_discount;
			}
			set
			{
				if ((this._pro_discount != value))
				{
					this.Onpro_discountChanging(value);
					this.SendPropertyChanging();
					this._pro_discount = value;
					this.SendPropertyChanged("pro_discount");
					this.Onpro_discountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pro_gender", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string pro_gender
		{
			get
			{
				return this._pro_gender;
			}
			set
			{
				if ((this._pro_gender != value))
				{
					this.Onpro_genderChanging(value);
					this.SendPropertyChanging();
					this._pro_gender = value;
					this.SendPropertyChanged("pro_gender");
					this.Onpro_genderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pro_state", DbType="Bit NOT NULL")]
		public bool pro_state
		{
			get
			{
				return this._pro_state;
			}
			set
			{
				if ((this._pro_state != value))
				{
					this.Onpro_stateChanging(value);
					this.SendPropertyChanging();
					this._pro_state = value;
					this.SendPropertyChanged("pro_state");
					this.Onpro_stateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pro_url", DbType="NVarChar(MAX)")]
		public string pro_url
		{
			get
			{
				return this._pro_url;
			}
			set
			{
				if ((this._pro_url != value))
				{
					this.Onpro_urlChanging(value);
					this.SendPropertyChanging();
					this._pro_url = value;
					this.SendPropertyChanged("pro_url");
					this.Onpro_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="products_stock_List", Storage="_stock_List", ThisKey="pro_ID", OtherKey="pro_ID")]
		public EntitySet<stock_List> stock_List
		{
			get
			{
				return this._stock_List;
			}
			set
			{
				this._stock_List.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_List_products", Storage="_category_List", ThisKey="cat_ID", OtherKey="cat_ID", IsForeignKey=true)]
		public category_List category_List
		{
			get
			{
				return this._category_List.Entity;
			}
			set
			{
				category_List previousValue = this._category_List.Entity;
				if (((previousValue != value) 
							|| (this._category_List.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._category_List.Entity = null;
						previousValue.products.Remove(this);
					}
					this._category_List.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._cat_ID = value.cat_ID;
					}
					else
					{
						this._cat_ID = default(string);
					}
					this.SendPropertyChanged("category_List");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seller_products", Storage="_seller", ThisKey="seller_no", OtherKey="seller_no", IsForeignKey=true)]
		public seller seller
		{
			get
			{
				return this._seller.Entity;
			}
			set
			{
				seller previousValue = this._seller.Entity;
				if (((previousValue != value) 
							|| (this._seller.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._seller.Entity = null;
						previousValue.products.Remove(this);
					}
					this._seller.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._seller_no = value.seller_no;
					}
					else
					{
						this._seller_no = default(int);
					}
					this.SendPropertyChanged("seller");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_stock_List(stock_List entity)
		{
			this.SendPropertyChanging();
			entity.products = this;
		}
		
		private void detach_stock_List(stock_List entity)
		{
			this.SendPropertyChanging();
			entity.products = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.review")]
	public partial class review : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _re_ID;
		
		private int _cus_no;
		
		private string _stock_ID;
		
		private bool _re_like;
		
		private string _re_image;
		
		private string _re_txt;
		
		private System.DateTime _re_date;
		
		private string _re_comment;
		
		private System.Nullable<System.DateTime> _re_comment_date;
		
		private EntityRef<customers> _customers;
		
		private EntityRef<stock_List> _stock_List;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onre_IDChanging(int value);
    partial void Onre_IDChanged();
    partial void Oncus_noChanging(int value);
    partial void Oncus_noChanged();
    partial void Onstock_IDChanging(string value);
    partial void Onstock_IDChanged();
    partial void Onre_likeChanging(bool value);
    partial void Onre_likeChanged();
    partial void Onre_imageChanging(string value);
    partial void Onre_imageChanged();
    partial void Onre_txtChanging(string value);
    partial void Onre_txtChanged();
    partial void Onre_dateChanging(System.DateTime value);
    partial void Onre_dateChanged();
    partial void Onre_commentChanging(string value);
    partial void Onre_commentChanged();
    partial void Onre_comment_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onre_comment_dateChanged();
    #endregion
		
		public review()
		{
			this._customers = default(EntityRef<customers>);
			this._stock_List = default(EntityRef<stock_List>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_re_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int re_ID
		{
			get
			{
				return this._re_ID;
			}
			set
			{
				if ((this._re_ID != value))
				{
					this.Onre_IDChanging(value);
					this.SendPropertyChanging();
					this._re_ID = value;
					this.SendPropertyChanged("re_ID");
					this.Onre_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cus_no", DbType="Int NOT NULL")]
		public int cus_no
		{
			get
			{
				return this._cus_no;
			}
			set
			{
				if ((this._cus_no != value))
				{
					if (this._customers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncus_noChanging(value);
					this.SendPropertyChanging();
					this._cus_no = value;
					this.SendPropertyChanged("cus_no");
					this.Oncus_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stock_ID", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string stock_ID
		{
			get
			{
				return this._stock_ID;
			}
			set
			{
				if ((this._stock_ID != value))
				{
					if (this._stock_List.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstock_IDChanging(value);
					this.SendPropertyChanging();
					this._stock_ID = value;
					this.SendPropertyChanged("stock_ID");
					this.Onstock_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_re_like", DbType="Bit NOT NULL")]
		public bool re_like
		{
			get
			{
				return this._re_like;
			}
			set
			{
				if ((this._re_like != value))
				{
					this.Onre_likeChanging(value);
					this.SendPropertyChanging();
					this._re_like = value;
					this.SendPropertyChanged("re_like");
					this.Onre_likeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_re_image", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string re_image
		{
			get
			{
				return this._re_image;
			}
			set
			{
				if ((this._re_image != value))
				{
					this.Onre_imageChanging(value);
					this.SendPropertyChanging();
					this._re_image = value;
					this.SendPropertyChanged("re_image");
					this.Onre_imageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_re_txt", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string re_txt
		{
			get
			{
				return this._re_txt;
			}
			set
			{
				if ((this._re_txt != value))
				{
					this.Onre_txtChanging(value);
					this.SendPropertyChanging();
					this._re_txt = value;
					this.SendPropertyChanged("re_txt");
					this.Onre_txtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_re_date", DbType="DateTime NOT NULL")]
		public System.DateTime re_date
		{
			get
			{
				return this._re_date;
			}
			set
			{
				if ((this._re_date != value))
				{
					this.Onre_dateChanging(value);
					this.SendPropertyChanging();
					this._re_date = value;
					this.SendPropertyChanged("re_date");
					this.Onre_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_re_comment", DbType="NVarChar(MAX)")]
		public string re_comment
		{
			get
			{
				return this._re_comment;
			}
			set
			{
				if ((this._re_comment != value))
				{
					this.Onre_commentChanging(value);
					this.SendPropertyChanging();
					this._re_comment = value;
					this.SendPropertyChanged("re_comment");
					this.Onre_commentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_re_comment_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> re_comment_date
		{
			get
			{
				return this._re_comment_date;
			}
			set
			{
				if ((this._re_comment_date != value))
				{
					this.Onre_comment_dateChanging(value);
					this.SendPropertyChanging();
					this._re_comment_date = value;
					this.SendPropertyChanged("re_comment_date");
					this.Onre_comment_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customers_review", Storage="_customers", ThisKey="cus_no", OtherKey="cus_no", IsForeignKey=true)]
		public customers customers
		{
			get
			{
				return this._customers.Entity;
			}
			set
			{
				customers previousValue = this._customers.Entity;
				if (((previousValue != value) 
							|| (this._customers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customers.Entity = null;
						previousValue.review.Remove(this);
					}
					this._customers.Entity = value;
					if ((value != null))
					{
						value.review.Add(this);
						this._cus_no = value.cus_no;
					}
					else
					{
						this._cus_no = default(int);
					}
					this.SendPropertyChanged("customers");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="stock_List_review", Storage="_stock_List", ThisKey="stock_ID", OtherKey="stock_ID", IsForeignKey=true)]
		public stock_List stock_List
		{
			get
			{
				return this._stock_List.Entity;
			}
			set
			{
				stock_List previousValue = this._stock_List.Entity;
				if (((previousValue != value) 
							|| (this._stock_List.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._stock_List.Entity = null;
						previousValue.review.Remove(this);
					}
					this._stock_List.Entity = value;
					if ((value != null))
					{
						value.review.Add(this);
						this._stock_ID = value.stock_ID;
					}
					else
					{
						this._stock_ID = default(string);
					}
					this.SendPropertyChanged("stock_List");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.seller")]
	public partial class seller : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _seller_no;
		
		private string _seller_ID;
		
		private System.Data.Linq.Binary _seller_pwd;
		
		private string _seller_name;
		
		private string _seller_addr;
		
		private string _seller_boss;
		
		private string _seller_phone;
		
		private string _seller_postal;
		
		private string _seller_email;
		
		private string _seller_fax;
		
		private string _return_addr;
		
		private bool _seller_state;
		
		private string _corporate_registration_no;
		
		private bool _join_state;
		
		private EntitySet<payment_info> _payment_info;
		
		private EntitySet<products> _products;
		
		private EntitySet<stock_List> _stock_List;
		
		private EntitySet<transport_info> _transport_info;
		
		private EntitySet<Inquire_Admin> _Inquire_Admin;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onseller_noChanging(int value);
    partial void Onseller_noChanged();
    partial void Onseller_IDChanging(string value);
    partial void Onseller_IDChanged();
    partial void Onseller_pwdChanging(System.Data.Linq.Binary value);
    partial void Onseller_pwdChanged();
    partial void Onseller_nameChanging(string value);
    partial void Onseller_nameChanged();
    partial void Onseller_addrChanging(string value);
    partial void Onseller_addrChanged();
    partial void Onseller_bossChanging(string value);
    partial void Onseller_bossChanged();
    partial void Onseller_phoneChanging(string value);
    partial void Onseller_phoneChanged();
    partial void Onseller_postalChanging(string value);
    partial void Onseller_postalChanged();
    partial void Onseller_emailChanging(string value);
    partial void Onseller_emailChanged();
    partial void Onseller_faxChanging(string value);
    partial void Onseller_faxChanged();
    partial void Onreturn_addrChanging(string value);
    partial void Onreturn_addrChanged();
    partial void Onseller_stateChanging(bool value);
    partial void Onseller_stateChanged();
    partial void Oncorporate_registration_noChanging(string value);
    partial void Oncorporate_registration_noChanged();
    partial void Onjoin_stateChanging(bool value);
    partial void Onjoin_stateChanged();
    #endregion
		
		public seller()
		{
			this._payment_info = new EntitySet<payment_info>(new Action<payment_info>(this.attach_payment_info), new Action<payment_info>(this.detach_payment_info));
			this._products = new EntitySet<products>(new Action<products>(this.attach_products), new Action<products>(this.detach_products));
			this._stock_List = new EntitySet<stock_List>(new Action<stock_List>(this.attach_stock_List), new Action<stock_List>(this.detach_stock_List));
			this._transport_info = new EntitySet<transport_info>(new Action<transport_info>(this.attach_transport_info), new Action<transport_info>(this.detach_transport_info));
			this._Inquire_Admin = new EntitySet<Inquire_Admin>(new Action<Inquire_Admin>(this.attach_Inquire_Admin), new Action<Inquire_Admin>(this.detach_Inquire_Admin));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seller_no", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int seller_no
		{
			get
			{
				return this._seller_no;
			}
			set
			{
				if ((this._seller_no != value))
				{
					this.Onseller_noChanging(value);
					this.SendPropertyChanging();
					this._seller_no = value;
					this.SendPropertyChanged("seller_no");
					this.Onseller_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seller_ID", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string seller_ID
		{
			get
			{
				return this._seller_ID;
			}
			set
			{
				if ((this._seller_ID != value))
				{
					this.Onseller_IDChanging(value);
					this.SendPropertyChanging();
					this._seller_ID = value;
					this.SendPropertyChanged("seller_ID");
					this.Onseller_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seller_pwd", DbType="VarBinary(128) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary seller_pwd
		{
			get
			{
				return this._seller_pwd;
			}
			set
			{
				if ((this._seller_pwd != value))
				{
					this.Onseller_pwdChanging(value);
					this.SendPropertyChanging();
					this._seller_pwd = value;
					this.SendPropertyChanged("seller_pwd");
					this.Onseller_pwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seller_name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string seller_name
		{
			get
			{
				return this._seller_name;
			}
			set
			{
				if ((this._seller_name != value))
				{
					this.Onseller_nameChanging(value);
					this.SendPropertyChanging();
					this._seller_name = value;
					this.SendPropertyChanged("seller_name");
					this.Onseller_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seller_addr", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string seller_addr
		{
			get
			{
				return this._seller_addr;
			}
			set
			{
				if ((this._seller_addr != value))
				{
					this.Onseller_addrChanging(value);
					this.SendPropertyChanging();
					this._seller_addr = value;
					this.SendPropertyChanged("seller_addr");
					this.Onseller_addrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seller_boss", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string seller_boss
		{
			get
			{
				return this._seller_boss;
			}
			set
			{
				if ((this._seller_boss != value))
				{
					this.Onseller_bossChanging(value);
					this.SendPropertyChanging();
					this._seller_boss = value;
					this.SendPropertyChanged("seller_boss");
					this.Onseller_bossChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seller_phone", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string seller_phone
		{
			get
			{
				return this._seller_phone;
			}
			set
			{
				if ((this._seller_phone != value))
				{
					this.Onseller_phoneChanging(value);
					this.SendPropertyChanging();
					this._seller_phone = value;
					this.SendPropertyChanged("seller_phone");
					this.Onseller_phoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seller_postal", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string seller_postal
		{
			get
			{
				return this._seller_postal;
			}
			set
			{
				if ((this._seller_postal != value))
				{
					this.Onseller_postalChanging(value);
					this.SendPropertyChanging();
					this._seller_postal = value;
					this.SendPropertyChanged("seller_postal");
					this.Onseller_postalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seller_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string seller_email
		{
			get
			{
				return this._seller_email;
			}
			set
			{
				if ((this._seller_email != value))
				{
					this.Onseller_emailChanging(value);
					this.SendPropertyChanging();
					this._seller_email = value;
					this.SendPropertyChanged("seller_email");
					this.Onseller_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seller_fax", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string seller_fax
		{
			get
			{
				return this._seller_fax;
			}
			set
			{
				if ((this._seller_fax != value))
				{
					this.Onseller_faxChanging(value);
					this.SendPropertyChanging();
					this._seller_fax = value;
					this.SendPropertyChanged("seller_fax");
					this.Onseller_faxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_return_addr", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string return_addr
		{
			get
			{
				return this._return_addr;
			}
			set
			{
				if ((this._return_addr != value))
				{
					this.Onreturn_addrChanging(value);
					this.SendPropertyChanging();
					this._return_addr = value;
					this.SendPropertyChanged("return_addr");
					this.Onreturn_addrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seller_state", DbType="Bit NOT NULL")]
		public bool seller_state
		{
			get
			{
				return this._seller_state;
			}
			set
			{
				if ((this._seller_state != value))
				{
					this.Onseller_stateChanging(value);
					this.SendPropertyChanging();
					this._seller_state = value;
					this.SendPropertyChanged("seller_state");
					this.Onseller_stateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_corporate_registration_no", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string corporate_registration_no
		{
			get
			{
				return this._corporate_registration_no;
			}
			set
			{
				if ((this._corporate_registration_no != value))
				{
					this.Oncorporate_registration_noChanging(value);
					this.SendPropertyChanging();
					this._corporate_registration_no = value;
					this.SendPropertyChanged("corporate_registration_no");
					this.Oncorporate_registration_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_join_state", DbType="Bit NOT NULL")]
		public bool join_state
		{
			get
			{
				return this._join_state;
			}
			set
			{
				if ((this._join_state != value))
				{
					this.Onjoin_stateChanging(value);
					this.SendPropertyChanging();
					this._join_state = value;
					this.SendPropertyChanged("join_state");
					this.Onjoin_stateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seller_payment_info", Storage="_payment_info", ThisKey="seller_no", OtherKey="seller_no")]
		public EntitySet<payment_info> payment_info
		{
			get
			{
				return this._payment_info;
			}
			set
			{
				this._payment_info.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seller_products", Storage="_products", ThisKey="seller_no", OtherKey="seller_no")]
		public EntitySet<products> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seller_stock_List", Storage="_stock_List", ThisKey="seller_no", OtherKey="seller_no")]
		public EntitySet<stock_List> stock_List
		{
			get
			{
				return this._stock_List;
			}
			set
			{
				this._stock_List.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seller_transport_info", Storage="_transport_info", ThisKey="seller_no", OtherKey="seller_no")]
		public EntitySet<transport_info> transport_info
		{
			get
			{
				return this._transport_info;
			}
			set
			{
				this._transport_info.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seller_Inquire_Admin", Storage="_Inquire_Admin", ThisKey="seller_no", OtherKey="seller_no")]
		public EntitySet<Inquire_Admin> Inquire_Admin
		{
			get
			{
				return this._Inquire_Admin;
			}
			set
			{
				this._Inquire_Admin.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_payment_info(payment_info entity)
		{
			this.SendPropertyChanging();
			entity.seller = this;
		}
		
		private void detach_payment_info(payment_info entity)
		{
			this.SendPropertyChanging();
			entity.seller = null;
		}
		
		private void attach_products(products entity)
		{
			this.SendPropertyChanging();
			entity.seller = this;
		}
		
		private void detach_products(products entity)
		{
			this.SendPropertyChanging();
			entity.seller = null;
		}
		
		private void attach_stock_List(stock_List entity)
		{
			this.SendPropertyChanging();
			entity.seller = this;
		}
		
		private void detach_stock_List(stock_List entity)
		{
			this.SendPropertyChanging();
			entity.seller = null;
		}
		
		private void attach_transport_info(transport_info entity)
		{
			this.SendPropertyChanging();
			entity.seller = this;
		}
		
		private void detach_transport_info(transport_info entity)
		{
			this.SendPropertyChanging();
			entity.seller = null;
		}
		
		private void attach_Inquire_Admin(Inquire_Admin entity)
		{
			this.SendPropertyChanging();
			entity.seller = this;
		}
		
		private void detach_Inquire_Admin(Inquire_Admin entity)
		{
			this.SendPropertyChanging();
			entity.seller = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.stock_List")]
	public partial class stock_List : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _stock_ID;
		
		private string _pro_ID;
		
		private int _seller_no;
		
		private string _stock_size;
		
		private int _stock_count;
		
		private EntitySet<order_List> _order_List;
		
		private EntitySet<review> _review;
		
		private EntitySet<wish_List> _wish_List;
		
		private EntitySet<Inquire_Seller> _Inquire_Seller;
		
		private EntityRef<products> _products;
		
		private EntityRef<seller> _seller;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstock_IDChanging(string value);
    partial void Onstock_IDChanged();
    partial void Onpro_IDChanging(string value);
    partial void Onpro_IDChanged();
    partial void Onseller_noChanging(int value);
    partial void Onseller_noChanged();
    partial void Onstock_sizeChanging(string value);
    partial void Onstock_sizeChanged();
    partial void Onstock_countChanging(int value);
    partial void Onstock_countChanged();
    #endregion
		
		public stock_List()
		{
			this._order_List = new EntitySet<order_List>(new Action<order_List>(this.attach_order_List), new Action<order_List>(this.detach_order_List));
			this._review = new EntitySet<review>(new Action<review>(this.attach_review), new Action<review>(this.detach_review));
			this._wish_List = new EntitySet<wish_List>(new Action<wish_List>(this.attach_wish_List), new Action<wish_List>(this.detach_wish_List));
			this._Inquire_Seller = new EntitySet<Inquire_Seller>(new Action<Inquire_Seller>(this.attach_Inquire_Seller), new Action<Inquire_Seller>(this.detach_Inquire_Seller));
			this._products = default(EntityRef<products>);
			this._seller = default(EntityRef<seller>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stock_ID", DbType="VarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string stock_ID
		{
			get
			{
				return this._stock_ID;
			}
			set
			{
				if ((this._stock_ID != value))
				{
					this.Onstock_IDChanging(value);
					this.SendPropertyChanging();
					this._stock_ID = value;
					this.SendPropertyChanged("stock_ID");
					this.Onstock_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pro_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string pro_ID
		{
			get
			{
				return this._pro_ID;
			}
			set
			{
				if ((this._pro_ID != value))
				{
					if (this._products.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpro_IDChanging(value);
					this.SendPropertyChanging();
					this._pro_ID = value;
					this.SendPropertyChanged("pro_ID");
					this.Onpro_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seller_no", DbType="Int NOT NULL")]
		public int seller_no
		{
			get
			{
				return this._seller_no;
			}
			set
			{
				if ((this._seller_no != value))
				{
					if (this._seller.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onseller_noChanging(value);
					this.SendPropertyChanging();
					this._seller_no = value;
					this.SendPropertyChanged("seller_no");
					this.Onseller_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stock_size", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string stock_size
		{
			get
			{
				return this._stock_size;
			}
			set
			{
				if ((this._stock_size != value))
				{
					this.Onstock_sizeChanging(value);
					this.SendPropertyChanging();
					this._stock_size = value;
					this.SendPropertyChanged("stock_size");
					this.Onstock_sizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stock_count", DbType="Int NOT NULL")]
		public int stock_count
		{
			get
			{
				return this._stock_count;
			}
			set
			{
				if ((this._stock_count != value))
				{
					this.Onstock_countChanging(value);
					this.SendPropertyChanging();
					this._stock_count = value;
					this.SendPropertyChanged("stock_count");
					this.Onstock_countChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="stock_List_order_List", Storage="_order_List", ThisKey="stock_ID", OtherKey="stock_ID")]
		public EntitySet<order_List> order_List
		{
			get
			{
				return this._order_List;
			}
			set
			{
				this._order_List.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="stock_List_review", Storage="_review", ThisKey="stock_ID", OtherKey="stock_ID")]
		public EntitySet<review> review
		{
			get
			{
				return this._review;
			}
			set
			{
				this._review.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="stock_List_wish_List", Storage="_wish_List", ThisKey="stock_ID", OtherKey="stock_ID")]
		public EntitySet<wish_List> wish_List
		{
			get
			{
				return this._wish_List;
			}
			set
			{
				this._wish_List.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="stock_List_Inquire_Seller", Storage="_Inquire_Seller", ThisKey="stock_ID", OtherKey="stock_ID")]
		public EntitySet<Inquire_Seller> Inquire_Seller
		{
			get
			{
				return this._Inquire_Seller;
			}
			set
			{
				this._Inquire_Seller.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="products_stock_List", Storage="_products", ThisKey="pro_ID", OtherKey="pro_ID", IsForeignKey=true)]
		public products products
		{
			get
			{
				return this._products.Entity;
			}
			set
			{
				products previousValue = this._products.Entity;
				if (((previousValue != value) 
							|| (this._products.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._products.Entity = null;
						previousValue.stock_List.Remove(this);
					}
					this._products.Entity = value;
					if ((value != null))
					{
						value.stock_List.Add(this);
						this._pro_ID = value.pro_ID;
					}
					else
					{
						this._pro_ID = default(string);
					}
					this.SendPropertyChanged("products");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seller_stock_List", Storage="_seller", ThisKey="seller_no", OtherKey="seller_no", IsForeignKey=true)]
		public seller seller
		{
			get
			{
				return this._seller.Entity;
			}
			set
			{
				seller previousValue = this._seller.Entity;
				if (((previousValue != value) 
							|| (this._seller.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._seller.Entity = null;
						previousValue.stock_List.Remove(this);
					}
					this._seller.Entity = value;
					if ((value != null))
					{
						value.stock_List.Add(this);
						this._seller_no = value.seller_no;
					}
					else
					{
						this._seller_no = default(int);
					}
					this.SendPropertyChanged("seller");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_order_List(order_List entity)
		{
			this.SendPropertyChanging();
			entity.stock_List = this;
		}
		
		private void detach_order_List(order_List entity)
		{
			this.SendPropertyChanging();
			entity.stock_List = null;
		}
		
		private void attach_review(review entity)
		{
			this.SendPropertyChanging();
			entity.stock_List = this;
		}
		
		private void detach_review(review entity)
		{
			this.SendPropertyChanging();
			entity.stock_List = null;
		}
		
		private void attach_wish_List(wish_List entity)
		{
			this.SendPropertyChanging();
			entity.stock_List = this;
		}
		
		private void detach_wish_List(wish_List entity)
		{
			this.SendPropertyChanging();
			entity.stock_List = null;
		}
		
		private void attach_Inquire_Seller(Inquire_Seller entity)
		{
			this.SendPropertyChanging();
			entity.stock_List = this;
		}
		
		private void detach_Inquire_Seller(Inquire_Seller entity)
		{
			this.SendPropertyChanging();
			entity.stock_List = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.transport_info")]
	public partial class transport_info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _seller_no;
		
		private string _waybill_ID;
		
		private string _transport_state;
		
		private EntitySet<payment_info> _payment_info;
		
		private EntityRef<seller> _seller;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onseller_noChanging(int value);
    partial void Onseller_noChanged();
    partial void Onwaybill_IDChanging(string value);
    partial void Onwaybill_IDChanged();
    partial void Ontransport_stateChanging(string value);
    partial void Ontransport_stateChanged();
    #endregion
		
		public transport_info()
		{
			this._payment_info = new EntitySet<payment_info>(new Action<payment_info>(this.attach_payment_info), new Action<payment_info>(this.detach_payment_info));
			this._seller = default(EntityRef<seller>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seller_no", DbType="Int NOT NULL")]
		public int seller_no
		{
			get
			{
				return this._seller_no;
			}
			set
			{
				if ((this._seller_no != value))
				{
					if (this._seller.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onseller_noChanging(value);
					this.SendPropertyChanging();
					this._seller_no = value;
					this.SendPropertyChanged("seller_no");
					this.Onseller_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_waybill_ID", DbType="VarChar(13) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string waybill_ID
		{
			get
			{
				return this._waybill_ID;
			}
			set
			{
				if ((this._waybill_ID != value))
				{
					this.Onwaybill_IDChanging(value);
					this.SendPropertyChanging();
					this._waybill_ID = value;
					this.SendPropertyChanged("waybill_ID");
					this.Onwaybill_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transport_state", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string transport_state
		{
			get
			{
				return this._transport_state;
			}
			set
			{
				if ((this._transport_state != value))
				{
					this.Ontransport_stateChanging(value);
					this.SendPropertyChanging();
					this._transport_state = value;
					this.SendPropertyChanged("transport_state");
					this.Ontransport_stateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="transport_info_payment_info", Storage="_payment_info", ThisKey="waybill_ID", OtherKey="waybill_ID")]
		public EntitySet<payment_info> payment_info
		{
			get
			{
				return this._payment_info;
			}
			set
			{
				this._payment_info.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seller_transport_info", Storage="_seller", ThisKey="seller_no", OtherKey="seller_no", IsForeignKey=true)]
		public seller seller
		{
			get
			{
				return this._seller.Entity;
			}
			set
			{
				seller previousValue = this._seller.Entity;
				if (((previousValue != value) 
							|| (this._seller.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._seller.Entity = null;
						previousValue.transport_info.Remove(this);
					}
					this._seller.Entity = value;
					if ((value != null))
					{
						value.transport_info.Add(this);
						this._seller_no = value.seller_no;
					}
					else
					{
						this._seller_no = default(int);
					}
					this.SendPropertyChanged("seller");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_payment_info(payment_info entity)
		{
			this.SendPropertyChanging();
			entity.transport_info = this;
		}
		
		private void detach_payment_info(payment_info entity)
		{
			this.SendPropertyChanging();
			entity.transport_info = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.user_ship_info")]
	public partial class user_ship_info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_ship_Id;
		
		private int _cus_no;
		
		private string _user_name;
		
		private string _user_addr;
		
		private string _postal_code;
		
		private string _ship_require;
		
		private EntitySet<payment_info> _payment_info;
		
		private EntityRef<customers> _customers;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_ship_IdChanging(int value);
    partial void Onuser_ship_IdChanged();
    partial void Oncus_noChanging(int value);
    partial void Oncus_noChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void Onuser_addrChanging(string value);
    partial void Onuser_addrChanged();
    partial void Onpostal_codeChanging(string value);
    partial void Onpostal_codeChanged();
    partial void Onship_requireChanging(string value);
    partial void Onship_requireChanged();
    #endregion
		
		public user_ship_info()
		{
			this._payment_info = new EntitySet<payment_info>(new Action<payment_info>(this.attach_payment_info), new Action<payment_info>(this.detach_payment_info));
			this._customers = default(EntityRef<customers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_ship_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int user_ship_Id
		{
			get
			{
				return this._user_ship_Id;
			}
			set
			{
				if ((this._user_ship_Id != value))
				{
					this.Onuser_ship_IdChanging(value);
					this.SendPropertyChanging();
					this._user_ship_Id = value;
					this.SendPropertyChanged("user_ship_Id");
					this.Onuser_ship_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cus_no", DbType="Int NOT NULL")]
		public int cus_no
		{
			get
			{
				return this._cus_no;
			}
			set
			{
				if ((this._cus_no != value))
				{
					if (this._customers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncus_noChanging(value);
					this.SendPropertyChanging();
					this._cus_no = value;
					this.SendPropertyChanged("cus_no");
					this.Oncus_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_addr", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string user_addr
		{
			get
			{
				return this._user_addr;
			}
			set
			{
				if ((this._user_addr != value))
				{
					this.Onuser_addrChanging(value);
					this.SendPropertyChanging();
					this._user_addr = value;
					this.SendPropertyChanged("user_addr");
					this.Onuser_addrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postal_code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string postal_code
		{
			get
			{
				return this._postal_code;
			}
			set
			{
				if ((this._postal_code != value))
				{
					this.Onpostal_codeChanging(value);
					this.SendPropertyChanging();
					this._postal_code = value;
					this.SendPropertyChanged("postal_code");
					this.Onpostal_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ship_require", DbType="NVarChar(MAX)")]
		public string ship_require
		{
			get
			{
				return this._ship_require;
			}
			set
			{
				if ((this._ship_require != value))
				{
					this.Onship_requireChanging(value);
					this.SendPropertyChanging();
					this._ship_require = value;
					this.SendPropertyChanged("ship_require");
					this.Onship_requireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_ship_info_payment_info", Storage="_payment_info", ThisKey="user_ship_Id", OtherKey="user_ship_ID")]
		public EntitySet<payment_info> payment_info
		{
			get
			{
				return this._payment_info;
			}
			set
			{
				this._payment_info.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customers_user_ship_info", Storage="_customers", ThisKey="cus_no", OtherKey="cus_no", IsForeignKey=true)]
		public customers customers
		{
			get
			{
				return this._customers.Entity;
			}
			set
			{
				customers previousValue = this._customers.Entity;
				if (((previousValue != value) 
							|| (this._customers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customers.Entity = null;
						previousValue.user_ship_info.Remove(this);
					}
					this._customers.Entity = value;
					if ((value != null))
					{
						value.user_ship_info.Add(this);
						this._cus_no = value.cus_no;
					}
					else
					{
						this._cus_no = default(int);
					}
					this.SendPropertyChanged("customers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_payment_info(payment_info entity)
		{
			this.SendPropertyChanging();
			entity.user_ship_info = this;
		}
		
		private void detach_payment_info(payment_info entity)
		{
			this.SendPropertyChanging();
			entity.user_ship_info = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.wish_List")]
	public partial class wish_List : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _wish_ID;
		
		private int _cus_no;
		
		private string _stock_ID;
		
		private int _wish_count;
		
		private int _wish_price;
		
		private EntityRef<customers> _customers;
		
		private EntityRef<stock_List> _stock_List;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onwish_IDChanging(string value);
    partial void Onwish_IDChanged();
    partial void Oncus_noChanging(int value);
    partial void Oncus_noChanged();
    partial void Onstock_IDChanging(string value);
    partial void Onstock_IDChanged();
    partial void Onwish_countChanging(int value);
    partial void Onwish_countChanged();
    partial void Onwish_priceChanging(int value);
    partial void Onwish_priceChanged();
    #endregion
		
		public wish_List()
		{
			this._customers = default(EntityRef<customers>);
			this._stock_List = default(EntityRef<stock_List>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wish_ID", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string wish_ID
		{
			get
			{
				return this._wish_ID;
			}
			set
			{
				if ((this._wish_ID != value))
				{
					this.Onwish_IDChanging(value);
					this.SendPropertyChanging();
					this._wish_ID = value;
					this.SendPropertyChanged("wish_ID");
					this.Onwish_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cus_no", DbType="Int NOT NULL")]
		public int cus_no
		{
			get
			{
				return this._cus_no;
			}
			set
			{
				if ((this._cus_no != value))
				{
					if (this._customers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncus_noChanging(value);
					this.SendPropertyChanging();
					this._cus_no = value;
					this.SendPropertyChanged("cus_no");
					this.Oncus_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stock_ID", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string stock_ID
		{
			get
			{
				return this._stock_ID;
			}
			set
			{
				if ((this._stock_ID != value))
				{
					if (this._stock_List.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstock_IDChanging(value);
					this.SendPropertyChanging();
					this._stock_ID = value;
					this.SendPropertyChanged("stock_ID");
					this.Onstock_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wish_count", DbType="Int NOT NULL")]
		public int wish_count
		{
			get
			{
				return this._wish_count;
			}
			set
			{
				if ((this._wish_count != value))
				{
					this.Onwish_countChanging(value);
					this.SendPropertyChanging();
					this._wish_count = value;
					this.SendPropertyChanged("wish_count");
					this.Onwish_countChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wish_price", DbType="Int NOT NULL")]
		public int wish_price
		{
			get
			{
				return this._wish_price;
			}
			set
			{
				if ((this._wish_price != value))
				{
					this.Onwish_priceChanging(value);
					this.SendPropertyChanging();
					this._wish_price = value;
					this.SendPropertyChanged("wish_price");
					this.Onwish_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customers_wish_List", Storage="_customers", ThisKey="cus_no", OtherKey="cus_no", IsForeignKey=true)]
		public customers customers
		{
			get
			{
				return this._customers.Entity;
			}
			set
			{
				customers previousValue = this._customers.Entity;
				if (((previousValue != value) 
							|| (this._customers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customers.Entity = null;
						previousValue.wish_List.Remove(this);
					}
					this._customers.Entity = value;
					if ((value != null))
					{
						value.wish_List.Add(this);
						this._cus_no = value.cus_no;
					}
					else
					{
						this._cus_no = default(int);
					}
					this.SendPropertyChanged("customers");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="stock_List_wish_List", Storage="_stock_List", ThisKey="stock_ID", OtherKey="stock_ID", IsForeignKey=true)]
		public stock_List stock_List
		{
			get
			{
				return this._stock_List.Entity;
			}
			set
			{
				stock_List previousValue = this._stock_List.Entity;
				if (((previousValue != value) 
							|| (this._stock_List.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._stock_List.Entity = null;
						previousValue.wish_List.Remove(this);
					}
					this._stock_List.Entity = value;
					if ((value != null))
					{
						value.wish_List.Add(this);
						this._stock_ID = value.stock_ID;
					}
					else
					{
						this._stock_ID = default(string);
					}
					this.SendPropertyChanged("stock_List");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inquire_Seller")]
	public partial class Inquire_Seller : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Inquire_no;
		
		private string _Inquire_type;
		
		private int _cus_no;
		
		private string _stock_ID;
		
		private string _Inquire_title;
		
		private string _Inquire_body;
		
		private System.DateTime _Inquire_date;
		
		private System.Data.Linq.Binary _Inquire_image;
		
		private System.Nullable<System.DateTime> _re_date;
		
		private string _re_body;
		
		private EntityRef<customers> _customers;
		
		private EntityRef<stock_List> _stock_List;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInquire_noChanging(int value);
    partial void OnInquire_noChanged();
    partial void OnInquire_typeChanging(string value);
    partial void OnInquire_typeChanged();
    partial void Oncus_noChanging(int value);
    partial void Oncus_noChanged();
    partial void Onstock_IDChanging(string value);
    partial void Onstock_IDChanged();
    partial void OnInquire_titleChanging(string value);
    partial void OnInquire_titleChanged();
    partial void OnInquire_bodyChanging(string value);
    partial void OnInquire_bodyChanged();
    partial void OnInquire_dateChanging(System.DateTime value);
    partial void OnInquire_dateChanged();
    partial void OnInquire_imageChanging(System.Data.Linq.Binary value);
    partial void OnInquire_imageChanged();
    partial void Onre_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onre_dateChanged();
    partial void Onre_bodyChanging(string value);
    partial void Onre_bodyChanged();
    #endregion
		
		public Inquire_Seller()
		{
			this._customers = default(EntityRef<customers>);
			this._stock_List = default(EntityRef<stock_List>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inquire_no", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Inquire_no
		{
			get
			{
				return this._Inquire_no;
			}
			set
			{
				if ((this._Inquire_no != value))
				{
					this.OnInquire_noChanging(value);
					this.SendPropertyChanging();
					this._Inquire_no = value;
					this.SendPropertyChanged("Inquire_no");
					this.OnInquire_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inquire_type", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string Inquire_type
		{
			get
			{
				return this._Inquire_type;
			}
			set
			{
				if ((this._Inquire_type != value))
				{
					this.OnInquire_typeChanging(value);
					this.SendPropertyChanging();
					this._Inquire_type = value;
					this.SendPropertyChanged("Inquire_type");
					this.OnInquire_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cus_no", DbType="Int NOT NULL")]
		public int cus_no
		{
			get
			{
				return this._cus_no;
			}
			set
			{
				if ((this._cus_no != value))
				{
					if (this._customers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncus_noChanging(value);
					this.SendPropertyChanging();
					this._cus_no = value;
					this.SendPropertyChanged("cus_no");
					this.Oncus_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stock_ID", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string stock_ID
		{
			get
			{
				return this._stock_ID;
			}
			set
			{
				if ((this._stock_ID != value))
				{
					if (this._stock_List.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstock_IDChanging(value);
					this.SendPropertyChanging();
					this._stock_ID = value;
					this.SendPropertyChanged("stock_ID");
					this.Onstock_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inquire_title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Inquire_title
		{
			get
			{
				return this._Inquire_title;
			}
			set
			{
				if ((this._Inquire_title != value))
				{
					this.OnInquire_titleChanging(value);
					this.SendPropertyChanging();
					this._Inquire_title = value;
					this.SendPropertyChanged("Inquire_title");
					this.OnInquire_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inquire_body", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Inquire_body
		{
			get
			{
				return this._Inquire_body;
			}
			set
			{
				if ((this._Inquire_body != value))
				{
					this.OnInquire_bodyChanging(value);
					this.SendPropertyChanging();
					this._Inquire_body = value;
					this.SendPropertyChanged("Inquire_body");
					this.OnInquire_bodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inquire_date", DbType="DateTime NOT NULL")]
		public System.DateTime Inquire_date
		{
			get
			{
				return this._Inquire_date;
			}
			set
			{
				if ((this._Inquire_date != value))
				{
					this.OnInquire_dateChanging(value);
					this.SendPropertyChanging();
					this._Inquire_date = value;
					this.SendPropertyChanged("Inquire_date");
					this.OnInquire_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inquire_image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Inquire_image
		{
			get
			{
				return this._Inquire_image;
			}
			set
			{
				if ((this._Inquire_image != value))
				{
					this.OnInquire_imageChanging(value);
					this.SendPropertyChanging();
					this._Inquire_image = value;
					this.SendPropertyChanged("Inquire_image");
					this.OnInquire_imageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_re_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> re_date
		{
			get
			{
				return this._re_date;
			}
			set
			{
				if ((this._re_date != value))
				{
					this.Onre_dateChanging(value);
					this.SendPropertyChanging();
					this._re_date = value;
					this.SendPropertyChanged("re_date");
					this.Onre_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_re_body", DbType="NVarChar(MAX)")]
		public string re_body
		{
			get
			{
				return this._re_body;
			}
			set
			{
				if ((this._re_body != value))
				{
					this.Onre_bodyChanging(value);
					this.SendPropertyChanging();
					this._re_body = value;
					this.SendPropertyChanged("re_body");
					this.Onre_bodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customers_Inquire_Seller", Storage="_customers", ThisKey="cus_no", OtherKey="cus_no", IsForeignKey=true)]
		public customers customers
		{
			get
			{
				return this._customers.Entity;
			}
			set
			{
				customers previousValue = this._customers.Entity;
				if (((previousValue != value) 
							|| (this._customers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customers.Entity = null;
						previousValue.Inquire_Seller.Remove(this);
					}
					this._customers.Entity = value;
					if ((value != null))
					{
						value.Inquire_Seller.Add(this);
						this._cus_no = value.cus_no;
					}
					else
					{
						this._cus_no = default(int);
					}
					this.SendPropertyChanged("customers");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="stock_List_Inquire_Seller", Storage="_stock_List", ThisKey="stock_ID", OtherKey="stock_ID", IsForeignKey=true)]
		public stock_List stock_List
		{
			get
			{
				return this._stock_List.Entity;
			}
			set
			{
				stock_List previousValue = this._stock_List.Entity;
				if (((previousValue != value) 
							|| (this._stock_List.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._stock_List.Entity = null;
						previousValue.Inquire_Seller.Remove(this);
					}
					this._stock_List.Entity = value;
					if ((value != null))
					{
						value.Inquire_Seller.Add(this);
						this._stock_ID = value.stock_ID;
					}
					else
					{
						this._stock_ID = default(string);
					}
					this.SendPropertyChanged("stock_List");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inquire_Admin")]
	public partial class Inquire_Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Inquire_no;
		
		private string _Inquire_type;
		
		private System.Nullable<int> _seller_no;
		
		private string _cus_or_sell;
		
		private string _Inquire_title;
		
		private string _Inquire_body;
		
		private System.DateTime _Inquire_date;
		
		private string _Inquire_image;
		
		private System.Nullable<System.DateTime> _re_date;
		
		private string _re_body;
		
		private System.Nullable<int> _cus_no;
		
		private EntityRef<customers> _customers;
		
		private EntityRef<seller> _seller;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInquire_noChanging(int value);
    partial void OnInquire_noChanged();
    partial void OnInquire_typeChanging(string value);
    partial void OnInquire_typeChanged();
    partial void Onseller_noChanging(System.Nullable<int> value);
    partial void Onseller_noChanged();
    partial void Oncus_or_sellChanging(string value);
    partial void Oncus_or_sellChanged();
    partial void OnInquire_titleChanging(string value);
    partial void OnInquire_titleChanged();
    partial void OnInquire_bodyChanging(string value);
    partial void OnInquire_bodyChanged();
    partial void OnInquire_dateChanging(System.DateTime value);
    partial void OnInquire_dateChanged();
    partial void OnInquire_imageChanging(string value);
    partial void OnInquire_imageChanged();
    partial void Onre_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onre_dateChanged();
    partial void Onre_bodyChanging(string value);
    partial void Onre_bodyChanged();
    partial void Oncus_noChanging(System.Nullable<int> value);
    partial void Oncus_noChanged();
    #endregion
		
		public Inquire_Admin()
		{
			this._customers = default(EntityRef<customers>);
			this._seller = default(EntityRef<seller>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inquire_no", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Inquire_no
		{
			get
			{
				return this._Inquire_no;
			}
			set
			{
				if ((this._Inquire_no != value))
				{
					this.OnInquire_noChanging(value);
					this.SendPropertyChanging();
					this._Inquire_no = value;
					this.SendPropertyChanged("Inquire_no");
					this.OnInquire_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inquire_type", DbType="NVarChar(12) NOT NULL", CanBeNull=false)]
		public string Inquire_type
		{
			get
			{
				return this._Inquire_type;
			}
			set
			{
				if ((this._Inquire_type != value))
				{
					this.OnInquire_typeChanging(value);
					this.SendPropertyChanging();
					this._Inquire_type = value;
					this.SendPropertyChanged("Inquire_type");
					this.OnInquire_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seller_no", DbType="Int")]
		public System.Nullable<int> seller_no
		{
			get
			{
				return this._seller_no;
			}
			set
			{
				if ((this._seller_no != value))
				{
					if (this._seller.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onseller_noChanging(value);
					this.SendPropertyChanging();
					this._seller_no = value;
					this.SendPropertyChanged("seller_no");
					this.Onseller_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cus_or_sell", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string cus_or_sell
		{
			get
			{
				return this._cus_or_sell;
			}
			set
			{
				if ((this._cus_or_sell != value))
				{
					this.Oncus_or_sellChanging(value);
					this.SendPropertyChanging();
					this._cus_or_sell = value;
					this.SendPropertyChanged("cus_or_sell");
					this.Oncus_or_sellChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inquire_title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Inquire_title
		{
			get
			{
				return this._Inquire_title;
			}
			set
			{
				if ((this._Inquire_title != value))
				{
					this.OnInquire_titleChanging(value);
					this.SendPropertyChanging();
					this._Inquire_title = value;
					this.SendPropertyChanged("Inquire_title");
					this.OnInquire_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inquire_body", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Inquire_body
		{
			get
			{
				return this._Inquire_body;
			}
			set
			{
				if ((this._Inquire_body != value))
				{
					this.OnInquire_bodyChanging(value);
					this.SendPropertyChanging();
					this._Inquire_body = value;
					this.SendPropertyChanged("Inquire_body");
					this.OnInquire_bodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inquire_date", DbType="DateTime NOT NULL")]
		public System.DateTime Inquire_date
		{
			get
			{
				return this._Inquire_date;
			}
			set
			{
				if ((this._Inquire_date != value))
				{
					this.OnInquire_dateChanging(value);
					this.SendPropertyChanging();
					this._Inquire_date = value;
					this.SendPropertyChanged("Inquire_date");
					this.OnInquire_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inquire_image", DbType="NVarChar(MAX)")]
		public string Inquire_image
		{
			get
			{
				return this._Inquire_image;
			}
			set
			{
				if ((this._Inquire_image != value))
				{
					this.OnInquire_imageChanging(value);
					this.SendPropertyChanging();
					this._Inquire_image = value;
					this.SendPropertyChanged("Inquire_image");
					this.OnInquire_imageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_re_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> re_date
		{
			get
			{
				return this._re_date;
			}
			set
			{
				if ((this._re_date != value))
				{
					this.Onre_dateChanging(value);
					this.SendPropertyChanging();
					this._re_date = value;
					this.SendPropertyChanged("re_date");
					this.Onre_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_re_body", DbType="NVarChar(MAX)")]
		public string re_body
		{
			get
			{
				return this._re_body;
			}
			set
			{
				if ((this._re_body != value))
				{
					this.Onre_bodyChanging(value);
					this.SendPropertyChanging();
					this._re_body = value;
					this.SendPropertyChanged("re_body");
					this.Onre_bodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cus_no", DbType="Int")]
		public System.Nullable<int> cus_no
		{
			get
			{
				return this._cus_no;
			}
			set
			{
				if ((this._cus_no != value))
				{
					if (this._customers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncus_noChanging(value);
					this.SendPropertyChanging();
					this._cus_no = value;
					this.SendPropertyChanged("cus_no");
					this.Oncus_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customers_Inquire_Admin", Storage="_customers", ThisKey="cus_no", OtherKey="cus_no", IsForeignKey=true)]
		public customers customers
		{
			get
			{
				return this._customers.Entity;
			}
			set
			{
				customers previousValue = this._customers.Entity;
				if (((previousValue != value) 
							|| (this._customers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customers.Entity = null;
						previousValue.Inquire_Admin.Remove(this);
					}
					this._customers.Entity = value;
					if ((value != null))
					{
						value.Inquire_Admin.Add(this);
						this._cus_no = value.cus_no;
					}
					else
					{
						this._cus_no = default(Nullable<int>);
					}
					this.SendPropertyChanged("customers");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="seller_Inquire_Admin", Storage="_seller", ThisKey="seller_no", OtherKey="seller_no", IsForeignKey=true)]
		public seller seller
		{
			get
			{
				return this._seller.Entity;
			}
			set
			{
				seller previousValue = this._seller.Entity;
				if (((previousValue != value) 
							|| (this._seller.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._seller.Entity = null;
						previousValue.Inquire_Admin.Remove(this);
					}
					this._seller.Entity = value;
					if ((value != null))
					{
						value.Inquire_Admin.Add(this);
						this._seller_no = value.seller_no;
					}
					else
					{
						this._seller_no = default(Nullable<int>);
					}
					this.SendPropertyChanged("seller");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
